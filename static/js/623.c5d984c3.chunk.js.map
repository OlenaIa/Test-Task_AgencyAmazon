{"version":3,"file":"static/js/623.c5d984c3.chunk.js","mappings":"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","sources":["components/FiltersProfile/FiltersProfile.jsx","pages/Profiles.jsx","redux/accounts/accountsSelector.js","webpack://react-homework-template/./src/components/Filters/Filter.module.css?559f"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport { useSelector } from 'react-redux';\nimport css from '../Filters/Filter.module.css';\nimport { selectSelectedAccountById } from '../../redux/accounts/accountsSelector';\nimport Select from 'react-select';\n\nexport const FiltersProfile = ({ onChangeSetMarket, onSelectSetCountry, market, country }) => {\n    const profilesByAccountId = useSelector(selectSelectedAccountById);\n\n    const allCountries = profilesByAccountId.map(item => item.country)\n        .filter((country, index, array) => array.indexOf(country) === index)\n        .sort((a, b) => a.localeCompare(b));\n    \n    const allCountriesOptions = [{ value: 'all', label: 'All country' }];\n    for (let i = 0; i < allCountries.length; i++) {\n        allCountriesOptions.push({ value: allCountries[i].toLowerCase(), label: allCountries[i] });\n    };\n  \n    return (\n        <div className={css.wrapFilters}>\n            <div className=\"mb-3\">\n                <label\n                    htmlFor=\"textInput\"\n                    className=\"form-label\">\n                    Filter by Country\n                </label>\n                <Select\n                    id=\"textInput\"\n                    onChange={onSelectSetCountry}\n                    options={allCountriesOptions}\n                    isSearchable\n                    placeholder='Enter the Country'\n                    value={country}\n                />\n            </div>\n            \n            <div className=\"mb-3\">\n                <label\n                    htmlFor=\"textInput\"\n                    className=\"form-label\">\n                    Filter by MarketPlace\n                </label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"textInput\"\n                    value={market}\n                    onChange={event => onChangeSetMarket(event.currentTarget.value)}\n                    placeholder=\"Write MarketPlace\"\n                />\n            </div>\n        </div>\n    )\n};\n\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectSelectedAccountById } from '../redux/accounts/accountsSelector';\nimport { nanoid } from 'nanoid';\nimport { NavLink } from 'react-router-dom';\nimport { profileIdSet, selectAccountId } from '../redux/chosenIdSlice';\nimport { FiltersProfile } from 'components/FiltersProfile/FiltersProfile';\nimport { useEffect, useState } from 'react';\n\nconst Profiles = () => {\n    const dispatch = useDispatch();\n    const profilesByAccountId = useSelector(selectSelectedAccountById);\n    const accountId = useSelector(selectAccountId);\n    const [market, setMarket] = useState('');\n    const [country, setCountry] = useState({ value: 'all', label: 'All country' });\n\n    const onClickProfileId = (profileId) => {\n        dispatch(profileIdSet(profileId))\n    };\n\n    const onChangeSetMarket = (value) => {\n        const lowerMarket = value.toLowerCase();\n        setMarket(lowerMarket);\n    };\n\n    useEffect(() => {\n        if (market === '' && country.value === 'all') {\n            return;\n        };\n        const visibleProfilesByAccountId = profilesByAccountId.filter(item =>\n            item.country.toLowerCase().includes(country.value));\n    console.log('visibleProfilesByAccountId', visibleProfilesByAccountId);\n    }, [market, country.value, profilesByAccountId]);\n\n\n    return (\n        <div className='container'>\n            <h2>Profiles for accountId: {accountId}</h2>\n            <FiltersProfile onChangeSetMarket={onChangeSetMarket} onSelectSetCountry={setCountry} market={market} country={country} />\n            <table className=\"table table-striped table-bordered\">\n                <thead className='table-dark'>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">ProfileId</th>\n                        <th scope=\"col\">Country</th>\n                        <th scope=\"col\">Marketplace</th>\n                    </tr>\n                </thead>\n                <tbody className=\"table-group-divider\">\n                    {profilesByAccountId?.map((item, index) =>\n                        <tr key={nanoid(3)}>\n                            <th scope=\"row\">{index + 1}</th>\n                            <td onClick={() => onClickProfileId(item.profileId)}>\n                                <NavLink className=\"btn btn-secondary\" role=\"button\" to=\"/campaigns\">\n                                    Click id {item.profileId}\n                                </NavLink>\n                            </td>\n                            <td>{item.country}</td>\n                            <td>{item.marketplace}</td>\n                        </tr>)}\n                </tbody>\n            </table>\n        </div>\n    )\n};\n\nexport default Profiles;","export const selectAllAccounts = state => state.accounts.allAccounts;\nexport const selectAccountsByPage = state => state.accounts.accountsByPage;\nexport const selectSelectedAccountById= state => state.accounts.selectedAccountById;\nexport const selectIsLoading = state => state.accounts.isLoading;\nexport const selectError = state => state.accounts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapFilters\":\"Filter_wrapFilters__GvMFl\"};"],"names":["FiltersProfile","_ref","onChangeSetMarket","onSelectSetCountry","market","country","allCountries","useSelector","selectSelectedAccountById","map","item","filter","index","array","indexOf","sort","a","b","localeCompare","allCountriesOptions","value","label","i","length","push","toLowerCase","_jsxs","className","css","children","_jsx","htmlFor","Select","id","onChange","options","isSearchable","placeholder","type","event","currentTarget","dispatch","useDispatch","profilesByAccountId","accountId","selectAccountId","_useState","useState","_useState2","_slicedToArray","setMarket","_useState3","_useState4","setCountry","useEffect","visibleProfilesByAccountId","includes","console","log","lowerMarket","scope","onClick","profileId","profileIdSet","NavLink","role","to","marketplace","nanoid","selectAllAccounts","state","accounts","allAccounts","selectAccountsByPage","accountsByPage","selectedAccountById"],"sourceRoot":""}