{"version":3,"file":"static/js/129.b21f53b7.chunk.js","mappings":"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","sources":["pages/Accounts.jsx","redux/accounts/accountsSelector.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAllAccounts, selectAccountsByPage } from '../redux/accounts/accountsSelector';\nimport { useEffect, useState } from 'react';\nimport { getAllAccountsThunk, getAccountsThunk, getProfilesByAccountIdThank, LIMIT } from '../redux/accounts/operationAccounts';\nimport { NavLink } from 'react-router-dom';\n\nconst Accounts = () => {\n    const allAccounts = useSelector(selectAllAccounts);\n    const accountsByPage = useSelector(selectAccountsByPage);\n    const dispatch = useDispatch();\n\n    const [page, setPage] = useState(0)\n    const [isLoadMore, setIsLoadMore] = useState(false);\n    const [isLoadLess, setIsLoadLess] = useState(true);\n    console.log('page =>', page);\n    console.log('isLoadMore =>', isLoadMore);\n    console.log('isLoadLess =>', isLoadLess);\n\n\n    useEffect(() => {\n        dispatch(getAllAccountsThunk())\n    }, [dispatch]);\n    const totalPage = allAccounts.length / LIMIT;\n\n    useEffect(() => {\n        if (page === 0) {\n            setPage(page + 1)\n            return;\n        };\n        if (page > 1) {\n            setIsLoadLess(false);\n        };\n        if (page === totalPage) {\n            setIsLoadMore(true);\n        };\n        dispatch(getAccountsThunk(page))\n    }, [dispatch, page, totalPage]);\n\n    const onClickAccountId = (accountId) => {\n        console.log('click onClickAccountId', accountId);\ndispatch(getProfilesByAccountIdThank(accountId))\n    };\n\n    \n    const onClickLoadMore = () => {\n        if (page === totalPage - 1) {\n            setIsLoadMore(true);\n        };\n        if (page > 1) {\n            setIsLoadLess(false);\n        };\n        setPage(page + 1)\n    };\n\n    const onClickLoadLess = () => {\n            if (page < totalPage + 1) {\n            setIsLoadMore(false);\n        };\n\n        if (page > 2) {\n            setIsLoadLess(false);\n        };\n        if (page === 2) {\n            setIsLoadLess(true);\n        };\n        setPage(page - 1)\n    };\n\n    return (\n        <div className='container'>\n            <h2>Accounts</h2>\n            <table className=\"table table-striped table-bordered\">\n                <thead className='table-dark'>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">AccountId</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">AuthToken</th>\n                        <th scope=\"col\">CreationDate</th>\n\n                    </tr>\n                </thead>\n                <tbody className=\"table-group-divider\">\n                    {accountsByPage?.map((acc, index) =>\n                        <tr key={acc.accountId}>\n                            <th scope=\"row\">{index + 1 + (page*10 - 10)}</th>\n                            <td onClick={() => onClickAccountId(acc.accountId)}><NavLink className=\"btn btn-secondary\" role=\"button\" to=\"/profiles\">{acc.accountId}</NavLink></td>\n                            <td>{acc.email}</td>\n                            <td>{acc.authToken}</td>\n                            <td>{acc.creationDate}</td>\n                        </tr>)}\n\n                </tbody>\n            </table>\n            {!isLoadMore && <button type=\"button\" class=\"btn btn-primary btn-lg\" onClick={onClickLoadMore}>Load more</button>}\n            {!isLoadLess && <button type=\"button\" class=\"btn btn-warning btn-lg\" onClick={onClickLoadLess}>Load less</button>}\n        </div>\n    )\n};\n\nexport default Accounts;","export const selectAllAccounts = state => state.accounts.allAccounts;\nexport const selectAccountsByPage = state => state.accounts.accountsByPage;\nexport const selectSelectedAccountById= state => state.accounts.selectedAccountById;\nexport const selectIsLoading = state => state.accounts.isLoading;\nexport const selectError = state => state.accounts.error;\n"],"names":["allAccounts","useSelector","selectAllAccounts","accountsByPage","selectAccountsByPage","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","isLoadMore","setIsLoadMore","_useState5","_useState6","isLoadLess","setIsLoadLess","console","log","useEffect","getAllAccountsThunk","totalPage","length","LIMIT","getAccountsThunk","_jsxs","className","children","_jsx","scope","map","acc","index","onClick","accountId","getProfilesByAccountIdThank","NavLink","role","to","email","authToken","creationDate","type","class","state","accounts","selectSelectedAccountById","selectedAccountById"],"sourceRoot":""}